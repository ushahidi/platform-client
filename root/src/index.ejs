<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <!-- Below variables are set in ushahidi-root-config.js -->
  <title></title>
  <meta name="description" content="">
  <meta name="apple-itunes-app" content="">
  <meta name="monetization" content="">

  <script src="/config.js"></script>
  
  <base href="/" />

  <!--
    Remove this if you only support browsers that support async/await.
    This is needed by babel to share largeish helper code for compiling async/await in older
    browsers. More information at https://github.com/single-spa/create-single-spa/issues/112
  -->
  <script src="https://cdn.jsdelivr.net/npm/regenerator-runtime@0.13.7/runtime.min.js"></script>

  <!--
    This CSP allows any SSL-enabled host and for arbitrary eval(), but you should limit these directives further to increase your app's security.
    Learn more about CSP policies at https://content-security-policy.com/#directive
  -->

  <meta name="importmap-type" content="systemjs-importmap" />
  <!-- If you wish to turn off import-map-overrides for specific environments (prod), uncomment the line below -->
  <!-- More info at https://github.com/joeldenning/import-map-overrides/blob/master/docs/configuration.md#domain-list -->
  <!-- <meta name="import-map-overrides-domains" content="denylist:prod.example.com" /> -->

  <!-- Shared dependencies go into this import map. Your shared dependencies must be of one of the following formats:

    1. System.register (preferred when possible) - https://github.com/systemjs/systemjs/blob/master/docs/system-register.md
    2. UMD - https://github.com/umdjs/umd
    3. Global variable

    More information about shared dependencies can be found at https://single-spa.js.org/docs/recommended-setup#sharing-with-import-maps.
  -->
  <script type="systemjs-importmap">
    {
      "imports": {
        "single-spa": "https://cdn.jsdelivr.net/npm/single-spa@5.9.0/lib/system/single-spa.min.js"
      }
    }
  </script>
  <link rel="preload" href="https://cdn.jsdelivr.net/npm/single-spa@5.9.0/lib/system/single-spa.min.js" as="script">
  
  <script type="systemjs-importmap" src="/importmap.json"></script>


  <!--
    If you need to support Angular applications, uncomment the script tag below to ensure only one instance of ZoneJS is loaded
    Learn more about why at https://single-spa.js.org/docs/ecosystem-angular/#zonejs
  -->
  <!-- <script src="https://cdn.jsdelivr.net/npm/zone.js@0.11.3/dist/zone.min.js"></script> -->

  <script src="https://cdn.jsdelivr.net/npm/import-map-overrides@2.2.0/dist/import-map-overrides.js"></script>
  <% if (isLocal) { %>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/system.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/extras/amd.js"></script>
  <% } else { %>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/system.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/extras/amd.min.js"></script>
  <% } %>

</head>
<body>
  <script>
    System.import('@ushahidi/root-config');
    System.import('@ushahidi/api');
    System.import('@ushahidi/utilities');
    System.import('@ushahidi/legacy-app');
  </script>

<script>
  // Loading Google Analytics
  if(window.ushahidi && window.ushahidi.gaEnabled) {
      (function (i, s, o, g, r, a, m) {
      i["GoogleAnalyticsObject"] = r;
      (i[r] =
          i[r] ||
          function () {
              (i[r].q = i[r].q || []).push(arguments);
          }),
          (i[r].l = 1 * new Date());
      (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);
      a.async = 1;
      a.src = g;
      m.parentNode.insertBefore(a, m);
    })(
        window,
        document,
        "script",
        "//www.google-analytics.com/analytics.js",
        "ga"
    );

    ga("create", window.ushahidi.gaKey, "auto");
    ga("send", "pageview");
  }
  
  // Loading Google-Maps to enable use of Places-API
  if (window.ushahidi && window.ushahidi.googleMapsApiKey) {
      (function (d, t, c, s) {
          var g = d.createElement(t);
          g.id = "mapsApi";
          g.type = "text/javascript";
          g.async = true;
          g.src =
              "https://maps.googleapis.com/maps/api/js?key=" +
              window.ushahidi.googleMapsApiKey +
              "&libraries=places";
          g.onload = c;
          g.onreadystatechange = c;
          s = d.getElementsByTagName(t)[0];
          s.parentNode.insertBefore(g, s);
      })(document, "script", function () {
          var e = document.createElement("div");
          e.style.display = "none";
          window.googlePlaces = new google.maps.places.PlacesService(e);
      });
  }
</script>



<script>
if(window.ushahidi && window.ushahidi.googleTagManager) {
  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer', window.ushahidi.googleTagManager);
}
</script>
<!-- End Google Tag Manager -->

  <import-map-overrides-full show-when-local-storage="devtools" dev-libs></import-map-overrides-full>
</body>
</html>
